CFLAGS += -nostdinc
CFLAGS += -I$(TUP_CWD)/include
CFLAGS += -I$(TUP_CWD)/arch/@(ARCH)/include
CFLAGS += -isystem $(GCC_ROOT)/gcc/ginclude

CFLAGS += -D__KERNEL__
CFLAGS += -Wall
CFLAGS += -Wundef
CFLAGS += -Wstrict-prototypes
CFLAGS += -Wno-trigraphs
CFLAGS += -fno-strict-aliasing
CFLAGS += -fno-common
CFLAGS += -Werror-implicit-function-declaration
CFLAGS += -m32
CFLAGS += -msoft-float
CFLAGS += -mregparm=3
CFLAGS += -freg-struct-return
CFLAGS += -mpreferred-stack-boundary=2
CFLAGS += -march=i686
CFLAGS += -mtune=pentium4
CFLAGS += -Wa,-mtune=generic32
CFLAGS += -ffreestanding
CFLAGS += -DCONFIG_AS_CFI=1
CFLAGS += -DCONFIG_AS_CFI_SIGNAL_FRAME=1
CFLAGS += -pipe
CFLAGS += -Wno-sign-compare
CFLAGS += -fno-asynchronous-unwind-tables
CFLAGS += -mno-sse
CFLAGS += -mno-mmx
CFLAGS += -mno-sse2
CFLAGS += -mno-3dnow
CFLAGS += -fno-stack-protector
CFLAGS += -fomit-frame-pointer
CFLAGS += -Wdeclaration-after-statement
CFLAGS += -Wno-pointer-sign
CFLAGS += -fno-delete-null-pointer-checks
CFLAGS += -fno-strict-overflow
CFLAGS += -fno-dwarf2-cfi-asm
CFLAGS += -ftup-linux

CFLAGS_S += -D__ASSEMBLY__

!cc_linux = foreach | $(generated_headers) $(GITTUP_ROOT)/<compiler_files> |> ^ CC %f^ $(CC) -c %f -o %o $(CFLAGS) $(CFLAGS_%e) $(CFLAGS_%f) -D"KBUILD_STR(s)=#s" -D"KBUILD_BASENAME=KBUILD_STR(%B)" -D"KBUILD_MODNAME=KBUILD_STR(%B)" |> %B.o

!ld_linux = | $(link-y) $(GITTUP_ROOT)/<compiler_files> |> ^ LD %o^ $(LD) -m elf_i386 -r -o %o %f $(link-y) |>
!ld_linux.EMPTY = |> ^ EMPTY %o^ ar crs %o |>
